# HTTP Request with Digest Authentication
curl -X GET --user user01:secret01 --digest http://server01/api

# Bearer Authentication
curl -X GET --header "Authorization: Bearer $TOKEN" http://server01/api/v1

# Post JSON to REST API Endpoint
curl -X POST -H "Content-type: application/json" --date '{"key1": "value1", "key2": "value2"}' http://server01/api/v1/create

# OAuth with OpenShift 4 (or use ose-oauth-proxy as sidecar)
curl -k https://openshift.default.svc/.well-known/oauth-authorization-server
curl --user user01:pass01 -vIk 'https://oauth-openshift.apps.mycluster.example.com/oauth/authorize?response_type=token&client_id=openshift-challenging-client' (access_token=xxx)

# Suppress curl progress bar (-s), but do show errors (-S without this, -s masks errors in scripts)
curl -sS http://server.com/v1/info

# Curl inside pod to access API using token 
KUBE_JWT=$(</var/rn/secrets/kubernetes.io/serviceaccount/token)
curl -sSk -H "Authorization: Bearer $KUBE_JWT" https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}/api/v1/namespaces

# Curl inside pod to get OpenShift version
curl --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}/version/openshift
